{"version":3,"sources":["components/Form/helpers.js","components/Form/Form.jsx","components/Form/index.js","helpers/convertDate.js","components/Row/index.js","components/Row/Row.jsx","components/Table/index.js","components/Table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["findCountry","countryName","url","a","storedCountriesString","localStorage","getItem","storedCountries","JSON","parse","storedCountry","find","item","results","fetch","headers","then","data","json","Places","catch","alert","length","some","CountryName","push","setItem","stringify","StyledForm","styled","form","Row","div","Actions","InputsHolder","StyledDL","dl","StyledDT","dt","StyledDD","dd","Form","getFlightData","onClear","useState","date","month","String","getMonth","padStart","day","getDate","year","getFullYear","convertDate","Date","departureDate","setDepartureDate","from","setFrom","fromPlaces","setFromPlaces","to","setTo","toPlaces","setToPlaces","country","setCountry","currency","setCurrency","lang","setLang","getUrl","findCountryFrom","storedResults","findCountryTo","onSubmit","e","preventDefault","TextField","type","label","defaultValue","onChange","target","value","placeholder","onBlur","PlaceName","FormControl","InputLabel","shrink","Select","MenuItem","disabled","Button","onClick","variant","color","carrier","currencies","quotes","places","CarrierId","Name","Symbol","flightData","filter","quote","OutboundLeg","CarrierIds","TableRow","TableCell","replace","map","MinPrice","join","Table","TableContainer","component","Paper","aria-label","TableHead","TableBody","itemData","Carriers","Currencies","Quotes","App","setFlightData","className","options","PlaceId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae087750.chunk.js","sourcesContent":["export const findCountry = async (countryName, url) => {\n    const storedCountriesString = localStorage.getItem(\"countries\");\n    const storedCountries = storedCountriesString ? JSON.parse(storedCountriesString) : [];\n    const storedCountry = storedCountries.find(item => item.countryName === countryName);\n\n    if (storedCountry) {\n        return storedCountry.results;\n    }\n\n    const results = await fetch(`${url}${countryName}`, {\n        headers: {\n            \"x-rapidapi-key\": \"c37641f051mshe682881ca808e3ep1b0ba1jsne813ccecdbfb\",\n            \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n            \"useQueryString\": true\n        },\n    }).then(data => data.json()).then(({ Places }) => Places).catch(() => {\n        alert(\"No such country\");\n        return [];\n    });\n\n    if (results.length) {\n        if (!storedCountries.some(item => item.CountryName === countryName)) {\n            storedCountries.push({ countryName, results });\n            localStorage.setItem(\n                \"countries\",\n                JSON.stringify(storedCountries)\n            )\n        }\n    }\n\n    return results;\n}","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { convertDate } from \"../../helpers/convertDate\";\nimport { findCountry } from \"./helpers\";\n\nconst StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: 20px;\n`;\n\nconst Actions = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n`;\n\nconst InputsHolder = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n\n    & > *:not(:first-child) {\n        margin-left: 10px;\n    }\n\n    & > * {\n        flex: 0 1 33%;\n    }\n`;\n\nconst StyledDL = styled.dl`\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    text-align: right;\n`;\n\nconst StyledDT = styled.dt`\n    margin: 0 0 5px;\n    font-size: 13px;\n    color: #0000008a;\n`;\n\nconst StyledDD = styled.dd`\n    margin: 0;\n`;\n\nexport const Form = ({ getFlightData, onClear }) => {\n    const [departureDate, setDepartureDate] = useState(convertDate(new Date()));\n    const [from, setFrom] = useState(\"\");\n    const [fromPlaces, setFromPlaces] = useState([]);\n    const [to, setTo] = useState(\"\");\n    const [toPlaces, setToPlaces] = useState([]);\n    const [country, setCountry] = useState(\"UA\");\n    const [currency, setCurrency] = useState(\"EUR\");\n    const [lang, setLang] = useState(\"en-US\");\n    const getUrl = () => `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/${country}/${currency}/${lang}/?query=`;\n\n    const onSubmit = () =>\n        getFlightData({\n            departureDate,\n            from: fromPlaces?.[0] || [],\n            to: toPlaces?.[0] || [],\n            country,\n            currency,\n            lang\n        });\n\n    const findCountryFrom = async () => {\n        if (!from) {\n            return;\n        }\n\n        const storedResults = await findCountry(from, getUrl());\n\n        setFromPlaces(storedResults);\n    }\n\n    const findCountryTo = async () => {\n        if (!to) {\n            return;\n        }\n\n        const storedResults = await findCountry(to, getUrl());\n\n        setToPlaces(storedResults);\n    }\n\n    return <>\n        <StyledForm onSubmit={e => e.preventDefault()}>\n            <Row>\n                <TextField\n                    type=\"date\"\n                    label=\"Departure Date\"\n                    defaultValue={departureDate}\n                    onChange={(date) => setDepartureDate(date.target.value)}\n                />\n            </Row>\n            <Row>\n                <TextField placeholder=\"London\" label=\"From\" value={from} onBlur={findCountryFrom} onChange={(e) => setFrom(e.target.value)} />\n                {\n                    fromPlaces.length !== 0 && <StyledDL>\n                        <StyledDT>All airports for:</StyledDT>\n                        <StyledDD>{fromPlaces[0].PlaceName} ({fromPlaces[0].CountryName})</StyledDD>\n                    </StyledDL>\n                }\n            </Row>\n            <Row>\n                <TextField placeholder=\"Paris\" label=\"To\" value={to} onBlur={findCountryTo} onChange={(e) => setTo(e.target.value)} />\n                {\n                    toPlaces.length !== 0 && <StyledDL>\n                        <StyledDT>All airports for:</StyledDT>\n                        <StyledDD>{toPlaces[0].PlaceName} ({toPlaces[0].CountryName})</StyledDD>\n                    </StyledDL>\n                }\n            </Row>\n            <InputsHolder>\n                <TextField label=\"Market Country\" type=\"text\" value={country} onChange={(e) => setCountry(e.target.value)} />\n                <FormControl>\n                    <InputLabel shrink>\n                        Currency\n                    </InputLabel>\n                    <Select\n                        value={currency}\n                        onChange={(e) => setCurrency(e.target.value)}\n                    >\n                        <MenuItem value=\"EUR\">EUR</MenuItem>\n                        <MenuItem value=\"USD\">USD</MenuItem>\n                        <MenuItem value=\"UAH\">UAH</MenuItem>\n                        <MenuItem value=\"RUB\">RUB</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField label=\"Lang\" disabled type=\"text\" value={lang} onChange={(e) => setLang(e.target.value)} />\n            </InputsHolder>\n        </StyledForm>\n        <Actions>\n            <Button onClick={onClear} variant=\"contained\" color=\"secondary\">\n                Clear\n            </Button>\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\n                Get data\n            </Button>\n        </Actions>\n    </>\n}","import { Form } from \"./Form\";\n\nexport default Form;","export const convertDate = (date) => {\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return `${year}-${month}-${day}`;\n}","import { Row } from \"./Row\";\n\nexport default Row;","import TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nexport const Row = ({ carrier, currencies, quotes, places }) => {\n    const { CarrierId, Name } = carrier;\n    const currency = currencies[0].Symbol;\n    const flightData = quotes.filter(quote => quote.OutboundLeg.CarrierIds[0] === CarrierId);\n\n    return <TableRow>\n        <TableCell>{Name} ({places.from.replace(\"-sky\", \"\")}/{places.to.replace(\"-sky\", \"\")})</TableCell>\n        <TableCell>{flightData.map(({ MinPrice }) => MinPrice).join(\", \")} {currency}</TableCell>\n    </TableRow>\n}","import { Table } from \"./Table\";\n\nexport default Table;","import MuiTable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Row from \"../Row\";\n\nexport const Table = ({ flightData }) => {\n\n    return (<TableContainer component={Paper}>\n        <MuiTable aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Price</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    flightData.map(itemData => {\n                        const { Carriers, Currencies, Quotes, Places } = itemData;\n                \n                        return Carriers &&\n                            Carriers.map(item =>\n                                <Row\n                                    key={item.CarrierId}\n                                    currencies={Currencies}\n                                    carrier={item}\n                                    quotes={Quotes}\n                                    places={Places}\n                                />\n                            )\n                    })\n                }\n            </TableBody>\n        </MuiTable>\n    </TableContainer>)\n}","import Form from \"./components/Form\";\nimport Table from \"./components/Table\";\nimport './App.css';\nimport { useState } from 'react';\n\nconst App = () => {\n    const [flightData, setFlightData] = useState([]);\n    const onClear = () => setFlightData([]);\n\n    const getFlightData = (options) => {\n        setFlightData([]);\n\n        const { departureDate, from, to, country, currency, lang } = options;\n\n        fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/${country}/${currency}/${lang}/${from.PlaceId}/${to.PlaceId}/${departureDate}`, {\n            headers: {\n                \"x-rapidapi-key\": \"ab45838c7cmsh9ac1edb62d199a4p1e3ca7jsnc9b68cdbfc9f\",\n                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                \"useQueryString\": true\n            },\n        }).then(data => data.json()).then(data => {\n            flightData.push({...data, Places: { from: from.PlaceId, to: to.PlaceId }});\n            setFlightData(flightData);\n        })\n    };\n    \n    return (\n        <div className=\"app\">\n            <Form getFlightData={getFlightData} onClear={onClear} />\n            <Table flightData={flightData}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}