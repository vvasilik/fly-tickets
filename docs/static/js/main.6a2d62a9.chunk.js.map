{"version":3,"sources":["helpers/convertDate.js","components/Form/Form.jsx","components/Form/index.js","components/Row/index.js","components/Row/Row.jsx","components/Table/Table.jsx","components/Table/index.js","helpers/findCountry.js","App.js","reportWebVitals.js","index.js"],"names":["convertDate","date","month","String","getMonth","padStart","day","getDate","year","getFullYear","StyledForm","styled","form","Divider","div","FormElement","Currency","FormControl","Row","Form","getFlightData","useState","Date","departureDate","setDepartureDate","arriveDate","setArriveDate","from","setFrom","to","setTo","currency","setCurrency","onSubmit","e","preventDefault","TextField","label","value","onChange","target","IconButton","onClick","aria-label","type","defaultValue","InputLabel","shrink","Select","MenuItem","Button","size","variant","color","carrier","currencies","quotes","places","CarrierId","Name","Symbol","flightData","filter","quote","OutboundLeg","CarrierIds","TableRow","TableCell","replace","map","MinPrice","join","StyledTableContainer","TableContainer","Heading","h3","DateText","span","Table","departureFlightData","arriveFlightData","Quotes","DepartureDate","slice","component","Paper","TableHead","TableBody","Carriers","item","Currencies","Places","findCountry","countryName","url","a","storedCountriesString","localStorage","getItem","storedCountries","JSON","parse","storedCountry","find","results","fetch","headers","then","data","json","catch","alert","length","some","CountryName","push","setItem","stringify","lang","marketCountry","getCountryUrl","App","setDepartureData","setArriveData","findCountryFrom","storedResults","findCountryTo","options","fromCountry","toCountry","PlaceId","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a2d62a9.chunk.js","sourcesContent":["export const convertDate = (date) => {\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return `${year}-${month}-${day}`;\n}","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport IconButton from '@material-ui/core/IconButton';\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\nimport { convertDate } from \"../../helpers/convertDate\";\n\nconst StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Divider = styled.div`\n    width: 48px;\n`;\n\nconst FormElement = styled.div`\n    width: calc(50% - 24px);\n    flex: 0 0 calc(50% - 24px);\n`;\n\nconst Currency = styled(FormControl)`\n    width: 100%;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 50px;\n`;\n\nexport const Form = ({ getFlightData }) => {\n    const [departureDate, setDepartureDate] = useState(convertDate(new Date()));\n    const [arriveDate, setArriveDate] = useState(convertDate(new Date()));\n    const [from, setFrom] = useState(\"\");\n    const [to, setTo] = useState(\"\");\n    const [currency, setCurrency] = useState(\"PLN\");\n    const onSubmit = () => getFlightData({ departureDate, arriveDate, from, to, currency });\n\n    const reversePlaces = () => {\n        setFrom(to);\n        setTo(from);\n    }\n\n    return <>\n        <StyledForm onSubmit={e => e.preventDefault()}>\n            <Row>\n                <FormElement>\n                    <TextField label=\"From\" value={from} onChange={(e) => setFrom(e.target.value)} />\n                </FormElement>\n                <IconButton onClick={reversePlaces} aria-label=\"reverse\">\n                    <SyncAltIcon />\n                </IconButton>\n                <FormElement>\n                    <TextField label=\"To\" value={to} onChange={(e) => setTo(e.target.value)} />\n                </FormElement>\n            </Row>\n            <Row>\n                <FormElement>\n                    <TextField\n                        type=\"date\"\n                        label=\"Departure Date\"\n                        defaultValue={departureDate}\n                        onChange={(date) => setDepartureDate(date.target.value)}\n                    />\n                </FormElement>\n                <Divider />\n                    <FormElement>\n                    <TextField\n                        type=\"date\"\n                        label=\"Arrive Date\"\n                        defaultValue={arriveDate}\n                        onChange={(date) => setArriveDate(date.target.value)}\n                    />\n                </FormElement>\n            </Row>\n            <Row>\n                <FormElement>\n                    <Currency>\n                        <InputLabel shrink>\n                            Currency\n                        </InputLabel>\n                        <Select\n                            value={currency}\n                            onChange={(e) => setCurrency(e.target.value)}\n                        >\n                            <MenuItem value=\"PLN\">PLN</MenuItem>\n                            <MenuItem value=\"EUR\">EUR</MenuItem>\n                            <MenuItem value=\"USD\">USD</MenuItem>\n                            <MenuItem value=\"UAH\">UAH</MenuItem>\n                        </Select>\n                    </Currency>\n                </FormElement>\n                <Button size=\"large\" onClick={onSubmit} variant=\"contained\" color=\"primary\">\n                    Find\n                </Button>\n            </Row>\n        </StyledForm>\n    </>\n}","import { Form } from \"./Form\";\n\nexport default Form;","import { Row } from \"./Row\";\n\nexport default Row;","import TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nexport const Row = ({ carrier, currencies, quotes, places }) => {\n    const { CarrierId, Name } = carrier;\n    const currency = currencies[0].Symbol;\n    const flightData = quotes.filter(quote => quote.OutboundLeg.CarrierIds[0] === CarrierId);\n\n    return <TableRow>\n        <TableCell>{Name} ({places.from.replace(\"-sky\", \"\")}/{places.to.replace(\"-sky\", \"\")})</TableCell>\n        <TableCell>{flightData.map(({ MinPrice }) => MinPrice).join(\", \")} {currency}</TableCell>\n    </TableRow>\n}","import styled from \"styled-components\";\nimport MuiTable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Row from \"../Row\";\n\nconst StyledTableContainer = styled(TableContainer)`\n    margin-bottom: 20px;\n`;\n\nconst Heading = styled.h3`\n    margin: 0 0 10px;\n`;\n\nconst DateText = styled.span`\n    font-size: 12px;\n    font-weight: normal;\n`;\n\nexport const Table = ({ departureFlightData, arriveFlightData }) => {\n    const departureDate = departureFlightData?.Quotes?.[0]?.OutboundLeg?.DepartureDate?.slice(0, 10);\n    const arriveDate = arriveFlightData?.Quotes?.[0]?.OutboundLeg?.DepartureDate?.slice(0, 10);\n\n    return <>\n        <Heading>Departure {departureDate && <DateText>({departureDate})</DateText>}</Heading>\n        <StyledTableContainer component={Paper}>\n            <MuiTable aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Price</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        departureFlightData.Carriers && departureFlightData.Carriers.map(item =>\n                            <Row\n                                key={item.CarrierId}\n                                currencies={departureFlightData.Currencies}\n                                carrier={item}\n                                quotes={departureFlightData.Quotes}\n                                places={departureFlightData.Places}\n                            />\n                        )\n                    }\n                </TableBody>\n            </MuiTable>\n        </StyledTableContainer>\n        <Heading>Arrive {arriveDate && <DateText>({arriveDate})</DateText>}</Heading>\n        <StyledTableContainer component={Paper}>\n            <MuiTable aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Price</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        arriveFlightData.Carriers && arriveFlightData.Carriers.map(item =>\n                            <Row\n                                key={item.CarrierId}\n                                currencies={arriveFlightData.Currencies}\n                                carrier={item}\n                                quotes={arriveFlightData.Quotes}\n                                places={arriveFlightData.Places}\n                            />\n                        )\n                    }\n                </TableBody>\n            </MuiTable>\n        </StyledTableContainer>\n    </>\n}","import { Table } from \"./Table\";\n\nexport default Table;","export const findCountry = async (countryName, url) => {\n    const storedCountriesString = localStorage.getItem(\"countries\");\n    const storedCountries = storedCountriesString ? JSON.parse(storedCountriesString) : [];\n    const storedCountry = storedCountries.find(item => item.countryName === countryName);\n\n    if (storedCountry) {\n        return storedCountry.results;\n    }\n\n    const results = await fetch(`${url}${countryName}`, {\n        headers: {\n            \"x-rapidapi-key\": \"c37641f051mshe682881ca808e3ep1b0ba1jsne813ccecdbfb\",\n            \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n            \"useQueryString\": true\n        },\n    }).then(data => data.json()).then(({ Places }) => Places).catch(() => {\n        alert(\"No such country\");\n        return [];\n    });\n\n    if (results.length) {\n        if (!storedCountries.some(item => item.CountryName === countryName)) {\n            storedCountries.push({ countryName, results });\n            localStorage.setItem(\n                \"countries\",\n                JSON.stringify(storedCountries)\n            )\n        }\n    }\n\n    return results;\n}","import { useState } from 'react';\nimport Form from \"./components/Form\";\nimport Table from \"./components/Table\";\nimport { findCountry } from \"./helpers/findCountry\";\nimport './App.css';\n\nconst lang = \"en-US\";\nconst marketCountry = \"UA\";\n\nconst getCountryUrl = (currency) =>\n    `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/${marketCountry}/${currency}/${lang}/?query=`;\n\nconst App = () => {\n    const [departureFlightData, setDepartureData] = useState({});\n    const [arriveFlightData, setArriveData] = useState({});\n\n    const findCountryFrom = async (from, currency) => {\n        if (!from || !currency) {\n            return;\n        }\n\n        const storedResults = await findCountry(from, getCountryUrl(currency));\n\n        return storedResults?.[0];\n    }\n\n    const findCountryTo = async (to, currency) => {\n        if (!to || !currency) {\n            return;\n        }\n\n        const storedResults = await findCountry(to, getCountryUrl(currency));\n\n        return storedResults?.[0];\n    }\n\n    const getFlightData = async (options) => {\n        const { departureDate, arriveDate, from, to, currency } = options;\n\n        const fromCountry = await findCountryFrom(from, currency);\n        const toCountry = await findCountryTo(to, currency);\n\n        if (!departureDate || !arriveDate || !fromCountry || !toCountry || !currency) {\n            return;\n        }\n\n        fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/${marketCountry}/${currency}/${lang}/${fromCountry?.PlaceId}/${toCountry?.PlaceId}/${departureDate}`, {\n            headers: {\n                \"x-rapidapi-key\": \"ab45838c7cmsh9ac1edb62d199a4p1e3ca7jsnc9b68cdbfc9f\",\n                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                \"useQueryString\": true\n            },\n        }).then(data => data.json()).then(data =>\n            setDepartureData({...data, Places: { from: fromCountry.PlaceId, to: toCountry.PlaceId }}));\n\n        fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/${marketCountry}/${currency}/${lang}/${toCountry?.PlaceId}/${fromCountry?.PlaceId}/${arriveDate}`, {\n            headers: {\n                \"x-rapidapi-key\": \"ab45838c7cmsh9ac1edb62d199a4p1e3ca7jsnc9b68cdbfc9f\",\n                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                \"useQueryString\": true\n            },\n        }).then(data => data.json()).then(data =>\n            setArriveData({...data, Places: { from: toCountry.PlaceId, to: fromCountry.PlaceId }}));\n    };\n\n    return (\n        <div className=\"app\">\n            <Form getFlightData={getFlightData} />\n            <Table departureFlightData={departureFlightData} arriveFlightData={arriveFlightData}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}